
@page "/catalog/natives/{id?}"
@inject NavigationManager NavigationHelper
@attribute [MustHavePermission(FSHAction.View, FSHResource.Natives)]

@inject IStringLocalizer<Natives> L


<FshTitle Title="@L["Natives"]" Description="@L["Manage Natives."]" />

<EntityTable @ref="_table" TEntity="NativeDto" TId="Guid" TRequest="NativeViewModel" Context="@Context">

    <AdvancedSearchContent>
        <RuralGovAutocomplete @bind-Value="SearchRuralGovId" />
        
    </AdvancedSearchContent>

    <EditFormContent >
        @if (!Context.AddEditModal.IsCreate)
        {
           @* <MudItem xs="12" md="6">
                <MudTextField Value="context.Id" ReadOnly DisableUnderLine Label="@L[$"Native Id"]" />
            </MudItem>*@
        }
        <MudItem xs="12" md="6">
            <MudTextField Label="@L["Name"]" For="@(() => context.Name)" @bind-Value="context.Name" />
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField Label="@L["Surname"]" For="@(() => context.Surname)" @bind-Value="context.Surname" />
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField Label="@L["MiddleName"]" For="@(() => context.MiddleName)" @bind-Value="context.MiddleName" />
        </MudItem>
        <MudItem xs="12" md="6">
            <MudDatePicker  Label="@L["BirthDate"]" For="@(() => context.BirthDate)" @bind-Date="context.BirthDate" />
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField Label="@L["Village"]" For="@(() => context.Village)"
                          @bind-Value="context.Village" />
        </MudItem>
        <MudItem xs="12" md="6">
            <MudTextField Label="@L["Description"]" For="@(() => context.Description)"
                @bind-Value="context.Description" />
        </MudItem>
        <MudItem xs="12" md="6">
            <RuralGovAutocomplete For="@(() => context.RuralGovId)" @bind-Value="context.RuralGovId" TransformOrigin="Origin.TopCenter" />
        </MudItem>
       @* <MudItem xs="12" md="6">
            <MudTextField Label="@L["Rate"]" For="@(() => context.Rate)" @bind-Value="context.Rate" />
        </MudItem>*@
        <MudItem xs="12" md="12">
            
            <MudItem>
                <div>
                    <MudButton HtmlTag="label" DisableElevation Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small"
                        StartIcon="@Icons.Filled.CloudUpload" for="fileInput">
                        @L["Upload"]
                    </MudButton>
                    @if(!Context.AddEditModal.IsCreate && !string.IsNullOrEmpty(context.ImagePath) && string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label" DisableElevation Variant="Variant.Filled" Color="Color.Info" Size="Size.Small" Target="_blank"
                            StartIcon="@Icons.Filled.RemoveRedEye" Link="@(Config[ConfigNames.ApiBaseUrl] + @context.ImagePath)" Style="margin-left: 5px;" >
                            @L["View"]
                        </MudButton>

                        <MudButton HtmlTag="label" DisableElevation Variant="Variant.Filled" Color="Color.Error" Size="Size.Small"
                            StartIcon="@Icons.Filled.Delete" OnClick="SetDeleteCurrentImageFlag" Style="margin-left: 5px;" >
                            @L["Delete"]
                        </MudButton>
                    }
                    @if(!string.IsNullOrEmpty(context.ImageInBytes))
                    {
                        <MudButton HtmlTag="label" DisableElevation OnClick="ClearImageInBytes" Variant="Variant.Filled" Color="Color.Warning" Size="Size.Small" Target="_blank"
                            StartIcon="@Icons.Filled.Clear" Style="margin-left: 5px;" >
                            @L["Clear"]
                        </MudButton>
                    }
                </div>
                <InputFile id="fileInput" hidden OnChange="UploadFiles" />
            </MudItem>
            <MudItem>
                @if(!string.IsNullOrEmpty(context.ImageInBytes))
                {
                    <MudAvatar Image ="@context.ImageInBytes" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
                else
                {
                    <MudAvatar Image="@(string.IsNullOrEmpty(@context.ImagePath) ? string.Empty : (Config[ConfigNames.ApiBaseUrl] + @context.ImagePath))" Square="true" Style="height: auto; width: auto; max-height: 100%"> </MudAvatar>
                }
            </MudItem>
        </MudItem>
    </EditFormContent>

</EntityTable>

@code {
    private RenderFragment<NativeDto> RateFieldTemplate => rate => __builder =>
        {
            <MudRating SelectedValue="@Convert.ToInt32(rate.Rate)" MaxValue="5" ReadOnly="true" />
        };

}